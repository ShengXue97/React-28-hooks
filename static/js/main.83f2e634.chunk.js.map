{"version":3,"sources":["context/auth-context.js","components/UI/Card.js","components/UI/LoadingIndicator.js","components/Ingredients/IngredientForm.js","components/Ingredients/IngredientList.js","components/UI/ErrorModal.js","components/Ingredients/Search.js","hooks/http.js","components/Ingredients/Ingredients.js","components/Auth.js","App.js","index.js"],"names":["AuthContext","React","createContext","AuthContextProvider","props","_useState","useState","_useState2","Object","slicedToArray","isAuth","setIsAuth","react_default","a","createElement","Provider","value","login","children","Card","className","LoadingIndicator","IngredientForm","memo","title","setTitle","_useState3","_useState4","amount","setAmount","console","log","components_UI_Card","onSubmit","event","preventDefault","addIngredientHandler","htmlFor","type","id","onChange","newTitle","target","newAmount","isLoading","components_UI_LoadingIndicator","IngredientList","ingredients","map","ig","key","onClick","onRemoveItem","bind","ErrorModal","Fragment","onClose","Search","filteredIngredientsHandler","enteredFilter","setEnteredFilter","inputRef","useRef","useEffect","timer","setTimeout","current","clearTimeout","ref","httpReducer","httpState","action","loading","error","objectSpread2","errorMessage","Error","useHttp","dispatchIngredient","_useReducer","useReducer","_useReducer2","dispatchHttp","clearError","useCallback","sendRequest","url","method","body","extra","fetch","headers","Content-Type","then","response","json","responseData","ingredient","name","loadedIngredients","push","catch","message","ingredientReducer","currentIngredients","concat","toConsumableArray","filter","Ingredients","originalIngredients","_useHttp","setIngredients","filterValue","toLowerCase","filteredIngredients","includes","JSON","stringify","removeIngredientHandler","ingredientId","ingredientList","useMemo","components_Ingredients_IngredientList","UI_ErrorModal","Ingredients_IngredientForm","Ingredients_Search","filterString","Auth","authContext","useContext","App","content","src_components_Auth","Ingredients_Ingredients","ReactDOM","render","auth_context","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.83f2e634.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport const AuthContext = React.createContext({\r\n});\r\n\r\nconst AuthContextProvider = props => {\r\n    const [isAuth, setIsAuth] = useState(false);\r\n    const loginHandler = () => {\r\n        setIsAuth(true);\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ login: loginHandler, isAuth: isAuth }}>\r\n            {props.children}\r\n        </ AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContextProvider;","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './LoadingIndicator.css';\n\nconst LoadingIndicator = () => (\n  <div className=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingIndicator;\n","import React from 'react';\n\nimport Card from '../UI/Card';\nimport './IngredientForm.css';\nimport LoadingIndicator from '../UI/LoadingIndicator';\nimport { useState } from 'react';\n\nconst IngredientForm = React.memo(props => {\n  const [title, setTitle] = useState('');\n  const [amount, setAmount] = useState('');\n  console.log('IngredientForm rendered');\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.addIngredientHandler({ title, amount });\n  };\n\n  return (\n    <section className=\"ingredient-form\">\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Name</label>\n            <input type=\"text\" id=\"title\" value={title} onChange={\n              event => {\n                const newTitle = event.target.value;\n                setTitle(newTitle);\n              }\n            } />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input type=\"number\" id=\"amount\" value={amount} onChange={\n              event => {\n                const newAmount = event.target.value;\n                setAmount(newAmount);\n              }\n            } />\n          </div>\n          <div className=\"ingredient-form__actions\">\n            <button type=\"submit\">Add Ingredient</button>\n            {props.isLoading && <LoadingIndicator />}\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default IngredientForm;\n","import React from 'react';\n\nimport './IngredientList.css';\n\nconst IngredientList = props => {\n  console.log(\"Ingredient list rendered\");\n  return (\n    <section className=\"ingredient-list\">\n      <h2>Loaded Ingredients</h2>\n      <ul>\n        {props.ingredients.map(ig => (\n          <li key={ig.id} onClick={props.onRemoveItem.bind(this, ig.id)}>\n            <span>{ig.title}</span>\n            <span>{ig.amount}x</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default IngredientList;\n","import React from 'react';\n\nimport './ErrorModal.css';\n\nconst ErrorModal = React.memo(props => {\n  return (\n    <React.Fragment>\n      <div className=\"backdrop\" onClick={props.onClose} />\n      <div className=\"error-modal\">\n        <h2>An Error Occurred!</h2>\n        <p>{props.children}</p>\n        <div className=\"error-modal__actions\">\n          <button type=\"button\" onClick={props.onClose}>\n            Okay\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default ErrorModal;\n","import React, { useEffect, useState, useRef } from 'react';\n\nimport Card from '../UI/Card';\nimport './Search.css';\n\nconst Search = React.memo(props => {\n  const { filteredIngredientsHandler } = props;\n  const [enteredFilter, setEnteredFilter] = useState('');\n  const inputRef = useRef();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (enteredFilter === inputRef.current.value) {\n        props.filteredIngredientsHandler(enteredFilter);\n      }\n    }, 500)\n\n    return () => {\n      clearTimeout(timer);\n    }\n\n  }, [enteredFilter, filteredIngredientsHandler, inputRef]);\n\n  return (\n    <section className=\"search\">\n      <Card>\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={enteredFilter}\n            onChange={event => {\n              setEnteredFilter(event.target.value);\n            }}\n          />\n        </div>\n      </Card>\n    </section>\n  );\n});\n\nexport default Search;\n","import { useReducer, useCallback } from 'react';\r\n\r\nconst httpReducer = (httpState, action) => {\r\n    switch (action.type) {\r\n        case 'SEND':\r\n            return { loading: true, error: null };\r\n        case 'RESPONSE':\r\n            return { ...httpState, loading: false };\r\n        case 'ERROR':\r\n            return { loading: false, error: action.errorMessage };\r\n        case 'CLEAR':\r\n            return { ...httpState, error: null };\r\n        default:\r\n            throw new Error('Should not get there!');\r\n    }\r\n}\r\n\r\nconst useHttp = (dispatchIngredient) => {\r\n    const [httpState, dispatchHttp] = useReducer(httpReducer, { loading: false, error: null });\r\n\r\n    const clearError = useCallback(() => {\r\n        dispatchHttp({ type: \"CLEAR\" })\r\n    }, []);\r\n\r\n    const sendRequest = useCallback((url, method, body, extra) => {\r\n        dispatchHttp({ type: 'SEND' });\r\n        fetch(url, {\r\n            method: method,\r\n            body: body,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => {\r\n            return response.json();\r\n        }).then(responseData => {\r\n            switch (method) {\r\n                case 'POST':\r\n                    dispatchIngredient({\r\n                        type: 'ADD',\r\n                        ingredient: {\r\n                            id: responseData.name,\r\n                            ...extra\r\n                        }\r\n                    });\r\n                    break;\r\n                case 'DELETE':\r\n                    dispatchIngredient({\r\n                        type: 'DELETE',\r\n                        id: extra\r\n                    });\r\n                    break;\r\n\r\n                case 'GET':\r\n                    const loadedIngredients = [];\r\n                    for (const key in responseData) {\r\n                        loadedIngredients.push({\r\n                            id: key,\r\n                            title: responseData[key].title,\r\n                            amount: responseData[key].amount\r\n                        })\r\n                    }\r\n                    dispatchIngredient({\r\n                        type: 'SET',\r\n                        ingredients: loadedIngredients\r\n                    });\r\n                    break;\r\n                default:\r\n                    break;\r\n            };\r\n\r\n            dispatchHttp({ type: \"RESPONSE\" });\r\n\r\n        }).catch(error => {\r\n            dispatchHttp({ type: \"ERROR\", errorMessage: error.message });\r\n        });\r\n    }, []);\r\n\r\n    return {\r\n        isLoading: httpState.loading,\r\n        error: httpState.error,\r\n        sendRequest: sendRequest,\r\n        clearError: clearError,\r\n    };\r\n};\r\n\r\nexport default useHttp;","import React, { useReducer, useState, useEffect, useCallback, useMemo } from 'react';\r\n\r\nimport IngredientForm from './IngredientForm';\r\nimport IngredientList from './IngredientList';\r\nimport ErrorModal from '../UI/ErrorModal';\r\nimport Search from './Search';\r\nimport useHttp from '../../hooks/http';\r\n\r\nconst ingredientReducer = (currentIngredients, action) => {\r\n  switch (action.type) {\r\n    case 'SET':\r\n      return action.ingredients;\r\n    case 'ADD':\r\n      return [...currentIngredients, action.ingredient];\r\n    case 'DELETE':\r\n      return currentIngredients.filter(ingredient => ingredient.id !== action.id);\r\n    default:\r\n      throw new Error('Should not get there!');\r\n  }\r\n}\r\n\r\nfunction Ingredients() {\r\n  const [originalIngredients, dispatchIngredient] = useReducer(ingredientReducer, []);\r\n  const { isLoading, error, sendRequest, clearError } = useHttp(dispatchIngredient);\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [enteredFilter, setEnteredFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    sendRequest('https://react-getting-started-4c1f1-default-rtdb.asia-southeast1.firebasedatabase.app/ingredients.json', 'GET', null, []);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (enteredFilter !== '') {\r\n      const filterValue = enteredFilter.toLowerCase();\r\n      const filteredIngredients = originalIngredients.filter(ingredient => ingredient.title.toLowerCase().includes(filterValue));\r\n      setIngredients(filteredIngredients);\r\n    } else {\r\n      setIngredients(originalIngredients);\r\n    }\r\n  }, [enteredFilter, originalIngredients]);\r\n\r\n  const filteredIngredientsHandler = filterString => {\r\n    setEnteredFilter(filterString);\r\n  };\r\n\r\n  const addIngredientHandler = useCallback(ingredient => {\r\n    sendRequest('https://react-getting-started-4c1f1-default-rtdb.asia-southeast1.firebasedatabase.app/ingredients.json', 'POST', JSON.stringify(ingredient), ingredient);\r\n  }, []);\r\n\r\n  const removeIngredientHandler = useCallback(ingredientId => {\r\n    sendRequest(`https://react-getting-started-4c1f1-default-rtdb.asia-southeast1.firebasedatabase.app/ingredients/${ingredientId}.json`, 'DELETE', null, ingredientId);\r\n  }, []);\r\n\r\n  const ingredientList = useMemo(() => {\r\n    return (\r\n      <IngredientList ingredients={ingredients} onRemoveItem={removeIngredientHandler} />\r\n    )\r\n  }, [ingredients, removeIngredientHandler]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {error && <ErrorModal onClose={clearError}>\r\n        {error}\r\n      </ErrorModal>}\r\n\r\n      <IngredientForm\r\n        addIngredientHandler={addIngredientHandler}\r\n        isLoading={isLoading}\r\n      />\r\n\r\n      <section>\r\n        <Search filteredIngredientsHandler={filteredIngredientsHandler} />\r\n        {ingredientList}\r\n      </section>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Ingredients;\r\n","import React, { useContext } from 'react';\n\nimport Card from './UI/Card';\nimport './Auth.css';\nimport { AuthContext } from '../context/auth-context';\n\nconst Auth = props => {\n  const authContext = useContext(AuthContext);\n\n  const loginHandler = () => {\n    authContext.login();\n  };\n\n  return (\n    <div className=\"auth\">\n      <Card>\n        <h2>You are not authenticated!</h2>\n        <p>Please log in to continue.</p>\n        <button onClick={loginHandler}>Log In</button>\n      </Card>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useContext } from 'react';\n\nimport Ingredients from './components/Ingredients/Ingredients';\nimport Auth from './components/Auth';\nimport { AuthContext } from './context/auth-context';\n\nconst App = props => {\n  const authContext = useContext(AuthContext);\n\n  let content = <Auth />\n  if (authContext.isAuth) {\n    content = <Ingredients />\n  }\n  return content;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport AuthContextProvider from './context/auth-context';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <AuthContextProvider>\n        <App />\n    </AuthContextProvider>\n    , document.getElementById('root')\n);\n"],"sourceRoot":""}